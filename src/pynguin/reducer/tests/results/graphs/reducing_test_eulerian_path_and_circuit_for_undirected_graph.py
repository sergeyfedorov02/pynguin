# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import eulerian_path_and_circuit_for_undirected_graph as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    module_0.dfs(bool_0, bool_0, bool_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 173
    module_0.check_euler(int_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    int_0 = 1832
    module_0.check_circuit_or_path(dict_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    module_0.check_euler(list_0, bool_0)

def test_case_8():
    bool_0 = False
    bool_1 = True
    tuple_0 = (bool_0, bool_1)
    bytes_0 = b'\xc8\xe3\x19\xa0\xaf\xd0z\x13\x935\x0b9\nB-b\rI\xc3\x8f'
    bool_2 = False
    set_0 = {bool_1}
    tuple_1 = (tuple_0, bytes_0, bool_2, set_0)
    var_0 = module_0.check_circuit_or_path(tuple_1, bool_1)

@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = 'M'
    tuple_0 = (str_0, str_0)
    bool_0 = True
    module_0.check_euler(tuple_0, bool_0)

def test_case_10():
    str_0 = ''
    tuple_0 = (str_0, str_0)
    bool_0 = True
    var_0 = module_0.check_euler(tuple_0, bool_0)