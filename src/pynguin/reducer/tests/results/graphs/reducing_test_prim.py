# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import prim as module_0
import heapq as module_1

@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '*n1353E'
    module_0.prim(str_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = 'pzs'
    vertex_0 = module_0.Vertex(str_0)
    list_0 = [vertex_0, vertex_0, vertex_0, vertex_0]
    module_0.prim(list_0, vertex_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = 'pzs'
    vertex_0 = module_0.Vertex(str_0)
    var_0 = vertex_0.add_neighbor(str_0)
    list_0 = [vertex_0]
    list_1 = module_0.prim(list_0, vertex_0)
    assert vertex_0.key == 0
    iterator_0 = module_0.prim_heap(list_1, vertex_0)
    module_0.prim(iterator_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = 'pzs'
    vertex_0 = module_0.Vertex(str_0)
    list_0 = [vertex_0, vertex_0, vertex_0, vertex_0]
    var_1 = vertex_0.add_neighbor(vertex_0)
    module_0.prim(list_0, vertex_0)

@pytest.mark.xfail(strict=True)
def test_case_13():
    str_0 = 'pzs'
    vertex_0 = module_0.Vertex(str_0)
    list_0 = [vertex_0, vertex_0]
    vertex_1 = module_0.Vertex(list_0)
    none_type_0 = None
    var_0 = vertex_0.add_neighbor(none_type_0)
    iterator_0 = module_0.prim_heap(list_0, vertex_0)
    module_0.prim(iterator_0, vertex_1)