# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import gale_shapley_bigraph as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = True
    bool_1 = False
    bool_2 = True
    list_0 = [bool_0, bool_0, bool_1, bool_2]
    list_1 = [list_0, list_0, list_0]
    module_0.stable_matching(list_1, list_1)


def test_case_1():
    list_0 = []
    list_1 = module_0.stable_matching(list_0, list_0)
    bytes_0 = b""
    list_2 = [bytes_0, bytes_0]
    str_0 = "\x0cFy~R:?boUrQ !"
    with pytest.raises(AssertionError):
        module_0.stable_matching(str_0, list_2)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = False
    bool_1 = False
    list_0 = [bool_0, bool_1]
    list_1 = [list_0]
    module_0.stable_matching(bool_0, list_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = True
    bool_1 = True
    bool_2 = False
    list_0 = [bool_2, bool_0]
    list_1 = [list_0]
    list_2 = module_0.stable_matching(list_1, list_1)
    list_3 = [bool_0, bool_1, bool_0]
    list_4 = [list_3]
    module_0.stable_matching(bool_1, list_4)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    bool_1 = False
    list_0 = [bool_1, bool_0]
    list_1 = [list_0, list_0, list_0]
    module_0.stable_matching(list_1, list_1)
