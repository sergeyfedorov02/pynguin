# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import breadth_first_search_2 as module_0
import collections as module_1

@pytest.mark.xfail(strict=True)
def test_case_3():
    str_0 = '.z0\rk`SHzjr\rHd'
    str_1 = 'a)B=<K,o{85['
    list_0 = [str_1, str_1]
    dict_0 = {str_0: str_0, str_0: str_1, str_0: list_0}
    module_0.breadth_first_search(dict_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = '.z0\rk`SHzjr\rHd'
    str_1 = 'a)B=<K,o{85['
    list_0 = [str_1, str_1]
    dict_0 = {str_0: str_0, str_0: str_1, str_0: list_0}
    module_0.breadth_first_search_with_deque(dict_0, str_0)

@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = 'pU|~r+'
    list_0 = [str_0, str_0]
    dict_0 = {str_0: str_0, str_0: str_0, str_0: list_0, str_0: list_0}
    list_1 = module_0.breadth_first_search(dict_0, str_0)
    assert module_0.G == {'A': ['B', 'C'], 'B': ['A', 'D', 'E'], 'C': ['A', 'F'], 'D': ['B'], 'E': ['B', 'F'], 'F': ['C', 'E']}
    list_2 = module_0.breadth_first_search_with_deque(dict_0, str_0)
    module_1.deque(**dict_1)