# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import minimum_spanning_tree_prims as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    heap_0 = module_0.Heap()
    dict_0 = {}
    list_0 = [dict_0]
    var_1 = heap_0.delete_minimum(dict_0, list_0)
    list_0.delete_minimum(var_0, var_0)

def test_case_1():
    dict_0 = {}
    list_0 = [dict_0, dict_0]
    var_0 = module_0.prisms_algorithm(list_0)

@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = '$* ~adS`9Mg\n1k%'
    list_0 = [str_0]
    module_0.prisms_algorithm(list_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = False
    bytes_0 = b' f\xb2\x8e=\xb6K\x1eV\xe5\xd3'
    heap_0 = module_0.Heap()
    heap_0.heapify(bytes_0, bool_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    heap_0 = module_0.Heap()
    bool_0 = False
    tuple_0 = (bool_0, heap_0)
    heap_0.bottom_to_top(tuple_0, bool_0, tuple_0, tuple_0)

@pytest.mark.xfail(strict=True)
def test_case_11():
    int_0 = -2476
    dict_0 = {int_0: int_0}
    heap_0 = module_0.Heap()
    heap_0.bottom_to_top(int_0, int_0, int_0, dict_0)