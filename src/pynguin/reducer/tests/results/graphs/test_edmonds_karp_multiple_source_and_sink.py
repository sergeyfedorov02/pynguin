# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import edmonds_karp_multiple_source_and_sink as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    module_0.FlowNetwork(none_type_0, none_type_0, none_type_0)


def test_case_1():
    bytes_0 = b""
    flow_network_0 = module_0.FlowNetwork(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(flow_network_0).__module__}.{type(flow_network_0).__qualname__}"
        == "edmonds_karp_multiple_source_and_sink.FlowNetwork"
    )
    assert flow_network_0.source_index is None
    assert flow_network_0.sink_index is None
    assert flow_network_0.graph == b""
    assert flow_network_0.vertices_count == 0
    assert flow_network_0.maximum_flow_algorithm is None


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.FlowNetworkAlgorithmExecutor(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.PushRelabelExecutor(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xe0\xba\xffX\xffE/\xcf:u\xfb=V5"
    module_0.FlowNetwork(bytes_0, bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = True
    tuple_0 = (bool_0,)
    flow_network_0 = module_0.FlowNetwork(tuple_0, tuple_0, tuple_0)
    assert (
        f"{type(flow_network_0).__module__}.{type(flow_network_0).__qualname__}"
        == "edmonds_karp_multiple_source_and_sink.FlowNetwork"
    )
    assert flow_network_0.source_index is True
    assert flow_network_0.sink_index is True
    assert flow_network_0.graph == (True,)
    assert flow_network_0.vertices_count == 1
    assert flow_network_0.maximum_flow_algorithm is None
    flow_network_0.set_maximum_flow_algorithm(bool_0)


def test_case_6():
    bool_0 = False
    tuple_0 = (bool_0,)
    flow_network_0 = module_0.FlowNetwork(tuple_0, tuple_0, tuple_0)
    assert (
        f"{type(flow_network_0).__module__}.{type(flow_network_0).__qualname__}"
        == "edmonds_karp_multiple_source_and_sink.FlowNetwork"
    )
    assert flow_network_0.source_index is False
    assert flow_network_0.sink_index is False
    assert flow_network_0.graph == (False,)
    assert flow_network_0.vertices_count == 1
    assert flow_network_0.maximum_flow_algorithm is None
    with pytest.raises(Exception):
        flow_network_0.find_maximum_flow()


def test_case_7():
    bytes_0 = b"\xea"
    flow_network_0 = module_0.FlowNetwork(bytes_0, bytes_0, bytes_0)
    assert (
        f"{type(flow_network_0).__module__}.{type(flow_network_0).__qualname__}"
        == "edmonds_karp_multiple_source_and_sink.FlowNetwork"
    )
    assert flow_network_0.source_index == 234
    assert flow_network_0.sink_index == 234
    assert flow_network_0.graph == b"\xea"
    assert flow_network_0.vertices_count == 1
    assert flow_network_0.maximum_flow_algorithm is None


def test_case_8():
    bool_0 = True
    tuple_0 = (bool_0,)
    flow_network_0 = module_0.FlowNetwork(tuple_0, tuple_0, tuple_0)
    assert (
        f"{type(flow_network_0).__module__}.{type(flow_network_0).__qualname__}"
        == "edmonds_karp_multiple_source_and_sink.FlowNetwork"
    )
    assert flow_network_0.source_index is True
    assert flow_network_0.sink_index is True
    assert flow_network_0.graph == (True,)
    assert flow_network_0.vertices_count == 1
    assert flow_network_0.maximum_flow_algorithm is None
    bytes_0 = b""
    set_0 = set()
    flow_network_1 = module_0.FlowNetwork(bytes_0, tuple_0, set_0)
    assert (
        f"{type(flow_network_1).__module__}.{type(flow_network_1).__qualname__}"
        == "edmonds_karp_multiple_source_and_sink.FlowNetwork"
    )
    assert flow_network_1.source_index is None
    assert flow_network_1.sink_index is None
    assert flow_network_1.graph == b""
    assert flow_network_1.vertices_count == 0
    assert flow_network_1.maximum_flow_algorithm is None
    with pytest.raises(Exception):
        flow_network_0.find_maximum_flow()


@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = True
    tuple_0 = (bool_0,)
    flow_network_0 = module_0.FlowNetwork(tuple_0, tuple_0, tuple_0)
    assert (
        f"{type(flow_network_0).__module__}.{type(flow_network_0).__qualname__}"
        == "edmonds_karp_multiple_source_and_sink.FlowNetwork"
    )
    assert flow_network_0.source_index is True
    assert flow_network_0.sink_index is True
    assert flow_network_0.graph == (True,)
    assert flow_network_0.vertices_count == 1
    assert flow_network_0.maximum_flow_algorithm is None
    int_0 = 1586
    dict_0 = {int_0: tuple_0}
    tuple_1 = (flow_network_0, tuple_0, dict_0)
    module_0.FlowNetwork(flow_network_0, tuple_0, tuple_1)
