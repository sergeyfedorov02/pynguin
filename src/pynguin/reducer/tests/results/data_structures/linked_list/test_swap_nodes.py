# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import swap_nodes as module_0
import builtins as module_1


def test_case_0():
    str_0 = "vi2tUw!PX|XL"
    none_type_0 = None
    linked_list_0 = module_0.LinkedList()
    var_0 = linked_list_0.push(linked_list_0)
    var_1 = linked_list_0.print_list()
    linked_list_1 = module_0.LinkedList()
    var_2 = linked_list_0.push(str_0)
    var_3 = linked_list_0.swap_nodes(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    linked_list_0 = module_0.LinkedList()
    linked_list_1 = module_0.LinkedList()
    var_0 = linked_list_0.print_list()
    var_0.print_list()


@pytest.mark.xfail(strict=True)
def test_case_2():
    linked_list_0 = module_0.LinkedList()
    var_0 = linked_list_0.push(linked_list_0)
    var_1 = linked_list_0.push(linked_list_0)
    var_2 = linked_list_0.swap_nodes(linked_list_0, linked_list_0)
    var_2.push(linked_list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    complex_0 = -674.612 - 3111.5j
    none_type_0 = None
    node_0 = module_0.Node(none_type_0)
    linked_list_0 = module_0.LinkedList()
    var_0 = linked_list_0.swap_nodes(complex_0, none_type_0)
    var_1 = linked_list_0.swap_nodes(var_0, node_0)
    linked_list_1 = module_0.LinkedList()
    var_0.print_list()


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1865
    linked_list_0 = module_0.LinkedList()
    var_0 = linked_list_0.push(int_0)
    var_0.print_list()


@pytest.mark.xfail(strict=True)
def test_case_5():
    linked_list_0 = module_0.LinkedList()
    var_0 = linked_list_0.swap_nodes(linked_list_0, linked_list_0)
    var_1 = linked_list_0.push(linked_list_0)
    var_2 = linked_list_0.push(linked_list_0)
    var_3 = linked_list_0.print_list()
    var_2.push(var_2)


def test_case_6():
    str_0 = "F#`s"
    none_type_0 = None
    linked_list_0 = module_0.LinkedList()
    var_0 = linked_list_0.push(linked_list_0)
    var_1 = linked_list_0.swap_nodes(none_type_0, none_type_0)
    linked_list_1 = module_0.LinkedList()
    var_2 = linked_list_0.push(str_0)
    var_3 = linked_list_0.swap_nodes(str_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    complex_0 = 1336.89199 + 3642.511j
    tuple_0 = ()
    set_0 = {complex_0, tuple_0, tuple_0, tuple_0}
    node_0 = module_0.Node(set_0)
    int_0 = 2387
    linked_list_0 = module_0.LinkedList()
    var_0 = linked_list_0.swap_nodes(int_0, int_0)
    var_1 = linked_list_0.push(var_0)
    none_type_0 = None
    linked_list_1 = module_0.LinkedList()
    var_2 = linked_list_0.swap_nodes(int_0, none_type_0)
    var_2.push(var_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = False
    tuple_0 = ()
    linked_list_0 = module_0.LinkedList()
    var_0 = linked_list_0.push(linked_list_0)
    var_1 = linked_list_0.push(bool_0)
    linked_list_1 = module_0.LinkedList()
    float_0 = 2042.983
    object_0 = module_1.object()
    bool_1 = True
    var_2 = linked_list_0.swap_nodes(float_0, var_0)
    linked_list_2 = module_0.LinkedList()
    linked_list_3 = module_0.LinkedList()
    node_0 = module_0.Node(tuple_0)
    linked_list_4 = module_0.LinkedList()
    node_1 = module_0.Node(node_0)
    var_1.push(bool_1)


@pytest.mark.xfail(strict=True)
def test_case_9():
    linked_list_0 = module_0.LinkedList()
    node_0 = module_0.Node(linked_list_0)
    var_0 = linked_list_0.push(linked_list_0)
    var_1 = linked_list_0.push(var_0)
    tuple_0 = ()
    var_2 = linked_list_0.print_list()
    none_type_0 = None
    var_3 = linked_list_0.swap_nodes(linked_list_0, none_type_0)
    var_4 = linked_list_0.push(tuple_0)
    var_5 = linked_list_0.push(linked_list_0)
    var_1.print_list()


@pytest.mark.xfail(strict=True)
def test_case_10():
    bool_0 = False
    linked_list_0 = module_0.LinkedList()
    var_0 = linked_list_0.push(bool_0)
    var_1 = linked_list_0.push(linked_list_0)
    tuple_0 = ()
    var_2 = linked_list_0.print_list()
    var_3 = linked_list_0.push(tuple_0)
    var_4 = linked_list_0.push(linked_list_0)
    node_0 = module_0.Node(tuple_0)
    var_5 = linked_list_0.swap_nodes(node_0, tuple_0)
    var_6 = linked_list_0.push(bool_0)
    linked_list_1 = module_0.LinkedList()
    var_7 = linked_list_1.push(linked_list_1)
    var_8 = linked_list_1.push(bool_0)
    linked_list_2 = module_0.LinkedList()
    float_0 = 2042.983
    object_0 = module_1.object()
    var_9 = linked_list_1.swap_nodes(float_0, var_7)
    str_0 = "{\\"
    linked_list_3 = module_0.LinkedList()
    var_10 = linked_list_3.swap_nodes(str_0, var_1)
    var_6.print_list()
