# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import middle_element_of_linked_list as module_0


def test_case_0():
    linked_list_0 = module_0.LinkedList()
    int_0 = linked_list_0.push(linked_list_0)
    var_0 = linked_list_0.middle_element()
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )
    assert (
        f"{type(var_0.head).__module__}.{type(var_0.head).__qualname__}"
        == "middle_element_of_linked_list.Node"
    )


def test_case_1():
    linked_list_0 = module_0.LinkedList()
    var_0 = linked_list_0.middle_element()
    int_0 = linked_list_0.push(var_0)


def test_case_2():
    linked_list_0 = module_0.LinkedList()
    int_0 = linked_list_0.push(linked_list_0)


def test_case_3():
    linked_list_0 = module_0.LinkedList()
    bool_0 = False
    int_0 = linked_list_0.push(bool_0)
    int_1 = linked_list_0.push(bool_0)
    var_0 = linked_list_0.middle_element()
    assert var_0 is False


def test_case_4():
    int_0 = 1161
    linked_list_0 = module_0.LinkedList()
    int_1 = 470
    node_0 = module_0.Node(int_1)
    int_2 = linked_list_0.push(int_0)
    linked_list_1 = module_0.LinkedList()
    var_0 = linked_list_1.middle_element()
    int_3 = linked_list_0.push(node_0)
    int_4 = linked_list_1.push(linked_list_1)
    int_5 = -955
    linked_list_2 = module_0.LinkedList()
    int_6 = linked_list_1.push(int_5)
    var_1 = linked_list_1.middle_element()
    assert (
        f"{type(var_1).__module__}.{type(var_1).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )
    assert (
        f"{type(var_1.head).__module__}.{type(var_1.head).__qualname__}"
        == "middle_element_of_linked_list.Node"
    )
    int_7 = linked_list_1.push(var_1)
    assert (
        f"{type(int_7).__module__}.{type(int_7).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )
    assert (
        f"{type(int_7.head).__module__}.{type(int_7.head).__qualname__}"
        == "middle_element_of_linked_list.Node"
    )
    int_8 = linked_list_1.push(linked_list_0)
    bool_0 = True
    var_2 = linked_list_2.middle_element()
    linked_list_3 = module_0.LinkedList()
    int_9 = linked_list_1.push(int_2)
    int_10 = linked_list_1.push(bool_0)
    var_3 = linked_list_1.middle_element()
    assert (
        f"{type(var_3).__module__}.{type(var_3).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )
    assert (
        f"{type(var_3.head).__module__}.{type(var_3.head).__qualname__}"
        == "middle_element_of_linked_list.Node"
    )
    node_1 = module_0.Node(var_3)
    assert (
        f"{type(node_1.data).__module__}.{type(node_1.data).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )


def test_case_5():
    linked_list_0 = module_0.LinkedList()
    int_0 = linked_list_0.push(linked_list_0)
    var_0 = linked_list_0.middle_element()
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )
    assert (
        f"{type(var_0.head).__module__}.{type(var_0.head).__qualname__}"
        == "middle_element_of_linked_list.Node"
    )
    var_1 = linked_list_0.middle_element()
    assert (
        f"{type(var_1).__module__}.{type(var_1).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )
    assert (
        f"{type(var_1.head).__module__}.{type(var_1.head).__qualname__}"
        == "middle_element_of_linked_list.Node"
    )
    node_0 = module_0.Node(linked_list_0)
    node_1 = module_0.Node(linked_list_0)
    int_1 = linked_list_0.push(var_0)
    assert (
        f"{type(int_1).__module__}.{type(int_1).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )
    assert (
        f"{type(int_1.head).__module__}.{type(int_1.head).__qualname__}"
        == "middle_element_of_linked_list.Node"
    )
    var_2 = linked_list_0.middle_element()
    assert (
        f"{type(var_2).__module__}.{type(var_2).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )
    assert (
        f"{type(var_2.head).__module__}.{type(var_2.head).__qualname__}"
        == "middle_element_of_linked_list.Node"
    )
    linked_list_1 = module_0.LinkedList()
    var_3 = linked_list_0.middle_element()
    assert (
        f"{type(var_3).__module__}.{type(var_3).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )
    assert (
        f"{type(var_3.head).__module__}.{type(var_3.head).__qualname__}"
        == "middle_element_of_linked_list.Node"
    )
    int_2 = linked_list_0.push(node_0)
    linked_list_2 = module_0.LinkedList()
    int_3 = 1013
    int_4 = linked_list_2.push(int_3)
    linked_list_3 = module_0.LinkedList()
    var_4 = linked_list_2.middle_element()
    assert var_4 == 1013
    var_5 = linked_list_3.middle_element()
    var_6 = linked_list_1.middle_element()
    node_2 = module_0.Node(int_1)
    var_7 = linked_list_0.middle_element()
    assert (
        f"{type(var_7).__module__}.{type(var_7).__qualname__}"
        == "middle_element_of_linked_list.LinkedList"
    )
    assert (
        f"{type(var_7.head).__module__}.{type(var_7.head).__qualname__}"
        == "middle_element_of_linked_list.Node"
    )
    linked_list_4 = module_0.LinkedList()
    int_5 = linked_list_0.push(linked_list_2)
    int_6 = -1139
    int_7 = linked_list_2.push(int_6)
    linked_list_5 = module_0.LinkedList()
