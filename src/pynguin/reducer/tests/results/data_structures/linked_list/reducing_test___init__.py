# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import __init__ as module_0

@pytest.mark.xfail(strict=True)
def test_case_1():
    linked_list_0 = module_0.LinkedList()
    assert len(linked_list_0) == 0
    bool_0 = linked_list_0.is_empty()
    bool_1 = linked_list_0.is_empty()
    none_type_0 = linked_list_0.add(bool_1)
    assert len(linked_list_0) == 1
    var_0 = linked_list_0.remove()
    assert var_0 is True
    assert len(linked_list_0) == 0
    var_0.remove()

@pytest.mark.xfail(strict=True)
def test_case_2():
    linked_list_0 = module_0.LinkedList()
    assert len(linked_list_0) == 0
    str_0 = linked_list_0.__str__()
    assert str_0 == ''
    none_type_0 = linked_list_0.add(linked_list_0)
    assert len(linked_list_0) == 1
    linked_list_1 = module_0.LinkedList()
    assert len(linked_list_1) == 0
    none_type_1 = None
    none_type_2 = linked_list_1.add(none_type_1)
    assert len(linked_list_1) == 1
    linked_list_0.__str__()

@pytest.mark.xfail(strict=True)
def test_case_3():
    linked_list_0 = module_0.LinkedList()
    assert len(linked_list_0) == 0
    none_type_0 = linked_list_0.add(linked_list_0)
    assert len(linked_list_0) == 1
    linked_list_0.__str__()

def test_case_7():
    linked_list_0 = module_0.LinkedList()
    assert len(linked_list_0) == 0
    str_0 = linked_list_0.__str__()
    assert str_0 == ''
    var_0 = linked_list_0.remove()
    none_type_0 = linked_list_0.add(var_0)
    assert len(linked_list_0) == 1
    linked_list_1 = module_0.LinkedList()
    assert len(linked_list_1) == 0
    none_type_1 = None
    none_type_2 = linked_list_1.add(none_type_1)
    assert len(linked_list_1) == 1
    str_1 = linked_list_0.__str__()
    assert str_1 == 'None'
    node_0 = module_0.Node(linked_list_1, str_0)
    assert len(node_0.item) == 1
    assert node_0.next == ''