# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import queue_on_pseudo_stack as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    queue_0 = module_0.Queue()
    assert queue_0.length == 0
    queue_0.front()


@pytest.mark.xfail(strict=True)
def test_case_1():
    queue_0 = module_0.Queue()
    assert queue_0.length == 0
    queue_1 = module_0.Queue()
    assert queue_1.length == 0
    none_type_0 = queue_1.put(queue_1)
    assert queue_1.length == 1
    var_0 = queue_1.front()
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "queue_on_pseudo_stack.Queue"
    )
    assert (
        f"{type(var_0.stack).__module__}.{type(var_0.stack).__qualname__}"
        == "builtins.list"
    )
    assert len(var_0.stack) == 1
    assert var_0.length == 1
    var_1 = var_0.get()
    assert queue_1.stack == []
    assert queue_1.length == 0
    assert var_0.stack == []
    assert var_0.length == 0
    assert (
        f"{type(var_1).__module__}.{type(var_1).__qualname__}"
        == "queue_on_pseudo_stack.Queue"
    )
    assert var_1.stack == []
    assert var_1.length == 0
    var_0.get()


def test_case_2():
    queue_0 = module_0.Queue()
    assert queue_0.length == 0


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    queue_0 = module_0.Queue()
    assert queue_0.length == 0
    none_type_0 = queue_0.put(bool_0)
    assert queue_0.length == 1
    queue_1 = module_0.Queue()
    assert queue_1.length == 0
    var_0 = queue_1.__str__()
    assert var_0 == "<>"
    var_0.front()


@pytest.mark.xfail(strict=True)
def test_case_4():
    queue_0 = module_0.Queue()
    assert queue_0.length == 0
    none_type_0 = queue_0.put(queue_0)
    assert queue_0.length == 1
    queue_1 = module_0.Queue()
    assert queue_1.length == 0
    int_0 = queue_0.size()
    assert int_0 == 1
    queue_0.rotate(queue_0)
