# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import priority_queue_using_list as module_0

def test_case_0():
    int_0 = -1646
    fixed_priority_queue_0 = module_0.FixedPriorityQueue()
    with pytest.raises(ValueError):
        fixed_priority_queue_0.enqueue(int_0, int_0)

@pytest.mark.xfail(strict=True)
def test_case_1():
    under_flow_error_0 = module_0.UnderFlowError()
    bool_0 = True
    fixed_priority_queue_0 = module_0.FixedPriorityQueue()
    fixed_priority_queue_0.enqueue(under_flow_error_0, bool_0)

def test_case_6():
    element_priority_queue_0 = module_0.ElementPriorityQueue()
    under_flow_error_0 = module_0.UnderFlowError()
    none_type_0 = element_priority_queue_0.enqueue(under_flow_error_0)
    assert len(element_priority_queue_0.queue) == 1
    int_0 = element_priority_queue_0.dequeue()
    assert element_priority_queue_0.queue == []
    assert f'{type(int_0).__module__}.{type(int_0).__qualname__}' == 'priority_queue_using_list.UnderFlowError'
    fixed_priority_queue_0 = module_0.FixedPriorityQueue()

def test_case_7():
    element_priority_queue_0 = module_0.ElementPriorityQueue()
    with pytest.raises(module_0.UnderFlowError):
        element_priority_queue_0.dequeue()

def test_case_8():
    under_flow_error_0 = module_0.UnderFlowError()