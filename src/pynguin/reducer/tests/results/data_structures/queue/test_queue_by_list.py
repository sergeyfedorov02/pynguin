# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import queue_by_list as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    float_0 = -380.365
    module_0.QueueByList(float_0)


def test_case_1():
    queue_by_list_0 = module_0.QueueByList()
    assert (
        f"{type(queue_by_list_0).__module__}.{type(queue_by_list_0).__qualname__}"
        == "queue_by_list.QueueByList"
    )
    assert len(queue_by_list_0) == 0
    with pytest.raises(IndexError):
        queue_by_list_0.get()


def test_case_2():
    queue_by_list_0 = module_0.QueueByList()
    assert (
        f"{type(queue_by_list_0).__module__}.{type(queue_by_list_0).__qualname__}"
        == "queue_by_list.QueueByList"
    )
    assert len(queue_by_list_0) == 0
    none_type_0 = queue_by_list_0.put(queue_by_list_0)
    assert len(queue_by_list_0) == 1
    var_0 = queue_by_list_0.get()
    assert len(queue_by_list_0) == 0
    assert (
        f"{type(var_0).__module__}.{type(var_0).__qualname__}"
        == "queue_by_list.QueueByList"
    )
    assert len(var_0) == 0
    with pytest.raises(IndexError):
        var_0.get()


@pytest.mark.xfail(strict=True)
def test_case_3():
    queue_by_list_0 = module_0.QueueByList()
    assert (
        f"{type(queue_by_list_0).__module__}.{type(queue_by_list_0).__qualname__}"
        == "queue_by_list.QueueByList"
    )
    assert len(queue_by_list_0) == 0
    bool_0 = True
    queue_by_list_0.rotate(bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    queue_by_list_0 = module_0.QueueByList()
    assert (
        f"{type(queue_by_list_0).__module__}.{type(queue_by_list_0).__qualname__}"
        == "queue_by_list.QueueByList"
    )
    assert len(queue_by_list_0) == 0
    none_type_0 = queue_by_list_0.rotate(bool_0)
    queue_by_list_1 = module_0.QueueByList()
    queue_by_list_1.get_front()


def test_case_5():
    queue_by_list_0 = module_0.QueueByList()
    assert (
        f"{type(queue_by_list_0).__module__}.{type(queue_by_list_0).__qualname__}"
        == "queue_by_list.QueueByList"
    )
    assert len(queue_by_list_0) == 0
    int_0 = queue_by_list_0.__len__()
    assert int_0 == 0
    queue_by_list_1 = module_0.QueueByList()
    with pytest.raises(IndexError):
        queue_by_list_1.get()


@pytest.mark.xfail(strict=True)
def test_case_6():
    queue_by_list_0 = module_0.QueueByList()
    assert (
        f"{type(queue_by_list_0).__module__}.{type(queue_by_list_0).__qualname__}"
        == "queue_by_list.QueueByList"
    )
    assert len(queue_by_list_0) == 0
    str_0 = queue_by_list_0.__repr__()
    assert str_0 == "Queue(())"
    str_1 = "{S*1e9_j(4L-)iTg5"
    none_type_0 = None
    dict_0 = {str_1: none_type_0}
    module_1.object(**dict_0)
