# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import tim_sort as module_0


def test_case_0():
    str_0 = 'Y>`"x~A/f}'
    var_0 = module_0.tim_sort(str_0)


def test_case_1():
    none_type_0 = None
    var_0 = module_0.merge(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    str_0 = "J6T$)nT,d!"
    var_0 = module_0.tim_sort(str_0)
    module_0.insertion_sort(str_0)


def test_case_3():
    str_0 = 'Y>`"x~A/f}'
    bool_0 = False
    str_1 = "J6T$)nT,d!"
    var_0 = module_0.tim_sort(str_0)
    bool_1 = True
    var_1 = module_0.binary_search(str_1, var_0, bool_1, bool_0)
    assert var_1 is True


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\xe0\x91\xf2\x14\x15\xbb|"
    var_0 = module_0.merge(bytes_0, bytes_0)
    var_1 = module_0.merge(var_0, var_0)
    var_2 = module_0.tim_sort(var_0)
    bool_0 = True
    int_0 = 1809
    var_3 = module_0.merge(var_1, var_1)
    var_4 = module_0.insertion_sort(var_0)
    module_0.binary_search(bool_0, int_0, var_2, var_2)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"L"
    var_0 = module_0.tim_sort(bytes_0)
    var_1 = module_0.tim_sort(var_0)
    module_0.binary_search(var_1, var_0, var_0, bytes_0)
