# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import bitonic_sort as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1289
    list_0 = [int_0]
    none_type_0 = module_0.comp_and_swap(list_0, int_0, int_0, int_0)
    bool_0 = True
    none_type_1 = None
    module_0.comp_and_swap(bool_0, none_type_1, bool_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    none_type_0 = module_0.comp_and_swap(dict_0, dict_0, dict_0, dict_0)
    bool_0 = True
    list_0 = [bool_0]
    none_type_1 = module_0.bitonic_merge(list_0, bool_0, bool_0, bool_0)
    int_0 = 176
    bool_1 = False
    module_0.bitonic_merge(bool_0, list_0, int_0, bool_1)


@pytest.mark.xfail(strict=True)
def test_case_2():
    int_0 = -2439
    none_type_0 = None
    bool_0 = False
    none_type_1 = module_0.bitonic_merge(int_0, none_type_0, bool_0, none_type_0)
    int_1 = 2589
    int_2 = -2697
    none_type_2 = module_0.bitonic_merge(int_1, int_2, int_1, int_1)
    bool_1 = False
    module_0.bitonic_sort(int_1, int_1, int_1, bool_1)


def test_case_3():
    int_0 = -8
    bool_0 = True
    list_0 = [int_0, int_0, int_0, bool_0]
    none_type_0 = module_0.bitonic_sort(list_0, bool_0, int_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    bool_1 = True
    int_0 = 390
    none_type_0 = None
    bool_2 = False
    bool_3 = False
    none_type_1 = module_0.comp_and_swap(list_0, bool_2, bool_3, bool_1)
    float_0 = -525.03677
    none_type_2 = module_0.bitonic_merge(list_0, int_0, float_0, bool_3)
    none_type_3 = module_0.bitonic_sort(list_0, list_0, bool_0, bool_1)
    int_1 = -4738
    none_type_4 = module_0.bitonic_merge(list_0, bool_0, int_1, list_0)
    module_0.bitonic_sort(list_0, bool_1, none_type_0, bool_3)


def test_case_5():
    bool_0 = True
    int_0 = 1274
    bool_1 = False
    list_0 = [bool_0, int_0, bool_1]
    bool_2 = False
    none_type_0 = module_0.comp_and_swap(list_0, bool_1, bool_0, bool_2)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    bool_1 = True
    none_type_0 = module_0.bitonic_merge(bool_0, bool_1, bool_0, bool_0)
    int_0 = 468
    list_0 = [int_0, int_0]
    none_type_1 = module_0.bitonic_merge(none_type_0, bool_0, int_0, none_type_0)
    none_type_2 = None
    module_0.bitonic_sort(list_0, list_0, none_type_2, int_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = False
    bool_1 = False
    none_type_0 = module_0.bitonic_merge(bool_0, bool_1, bool_0, bool_0)
    list_0 = [bool_0, bool_0]
    none_type_1 = module_0.comp_and_swap(list_0, bool_0, bool_0, bool_0)
    int_0 = 468
    list_1 = [int_0, int_0]
    none_type_2 = module_0.bitonic_merge(none_type_1, bool_0, int_0, none_type_1)
    none_type_3 = None
    module_0.bitonic_sort(list_1, list_1, none_type_3, int_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = True
    int_0 = -254
    int_1 = -2591
    int_2 = 2537
    none_type_0 = module_0.bitonic_merge(bool_0, bool_0, int_1, int_2)
    str_0 = "W_KbTdvT.P&aOD\tHsG\x0c"
    none_type_1 = module_0.comp_and_swap(int_0, bool_0, int_2, str_0)
    list_0 = [bool_0, bool_0, bool_0, int_0]
    int_3 = 1003
    none_type_2 = module_0.bitonic_merge(list_0, int_0, int_0, int_3)
    int_4 = 342
    int_5 = -2366
    list_1 = [int_3, int_5, int_0]
    int_6 = -999
    none_type_3 = module_0.bitonic_sort(list_1, none_type_1, int_1, int_6)
    none_type_4 = module_0.bitonic_sort(bool_0, none_type_1, bool_0, int_4)
    bool_1 = True
    module_0.bitonic_sort(str_0, bool_0, int_4, bool_1)
