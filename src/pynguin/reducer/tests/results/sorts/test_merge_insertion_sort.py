# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import merge_insertion_sort as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -134
    int_1 = 2444
    list_0 = [int_0, int_1, int_0]
    list_1 = module_0.merge_insertion_sort(list_0)
    bytes_0 = b"}\xf7\x93\xc8>S`G\xd1\xc9d]\x1d\xee\x903\x97\xff\x8b."
    list_2 = module_0.merge_insertion_sort(bytes_0)
    list_3 = module_0.merge_insertion_sort(list_2)
    module_0.sortlist_2d(list_2)


@pytest.mark.xfail(strict=True)
def test_case_1():
    dict_0 = {}
    list_0 = module_0.merge_insertion_sort(dict_0)
    none_type_0 = None
    list_1 = module_0.merge_insertion_sort(list_0)
    module_0.binary_search_insertion(list_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    bool_1 = True
    list_0 = [bool_0, bool_1, bool_1]
    module_0.sortlist_2d(list_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.merge(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    none_type_0 = None
    module_0.merge(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "thC"
    module_0.sortlist_2d(str_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bytes_0 = b"\xa0q\xc2\r4D\x8c!\xedIp\xe1\xb2|\x1f"
    list_0 = module_0.merge_insertion_sort(bytes_0)
    none_type_0 = None
    module_0.binary_search_insertion(none_type_0, none_type_0)
