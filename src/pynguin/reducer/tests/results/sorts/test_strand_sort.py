# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import strand_sort as module_0


def test_case_0():
    set_0 = set()
    list_0 = [set_0, set_0]
    list_1 = module_0.strand_sort(list_0, list_0)


def test_case_1():
    bytes_0 = b"=\x84\xc3\xcc\xe8\x9c\xce\xb1\xafEH\xa6\xbe\x88\xcfDi0\xda\x11"
    list_0 = [bytes_0]
    list_1 = module_0.strand_sort(list_0)


def test_case_2():
    bytes_0 = b"=\x84\xc3\xcc\xe8\x9c\xce\xb1\xafEH\xa6\xbe\x88\xcfDi0\xda\x11"
    list_0 = [bytes_0, bytes_0]
    list_1 = module_0.strand_sort(list_0)


def test_case_3():
    bool_0 = False
    list_0 = []
    list_1 = module_0.strand_sort(list_0)
    list_2 = module_0.strand_sort(bool_0, bool_0)
    int_0 = -419
    list_3 = [bool_0, int_0]
    list_4 = module_0.strand_sort(list_2, solution=list_2)
    none_type_0 = None
    list_5 = module_0.strand_sort(list_3, list_3, none_type_0)
    list_6 = module_0.strand_sort(bool_0, bool_0)
    none_type_1 = None
    list_7 = module_0.strand_sort(none_type_1)
    list_8 = module_0.strand_sort(list_6, solution=list_3)


@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    list_1 = module_0.strand_sort(list_0, solution=list_0)
    bytes_0 = b"z\xa8\x1f\xa8\x13\x13@\xf0\x8b4~\xb4"
    list_2 = [bytes_0]
    list_3 = module_0.strand_sort(list_2, bytes_0)
    bool_0 = False
    bool_1 = True
    list_4 = [bool_1, bool_0, bool_0, bool_0]
    module_0.strand_sort(list_4, solution=list_4)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bool_0 = False
    list_0 = []
    list_1 = module_0.strand_sort(list_0)
    int_0 = -419
    list_2 = [bool_0, int_0]
    module_0.strand_sort(list_2, solution=list_2)
