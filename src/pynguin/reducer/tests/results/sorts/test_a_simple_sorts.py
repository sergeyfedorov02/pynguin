# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import a_simple_sorts as module_0


def test_case_0():
    list_0 = []
    var_0 = module_0.shell_sort(list_0)
    list_1 = module_0.bead_sort(list_0)
    list_2 = module_0.double_sort(var_0)
    list_3 = module_0.exchange_sort(list_1)
    list_4 = module_0.exchange_sort(list_0)
    list_5 = module_0.bubble_sort(list_1)
    list_6 = module_0.cocktail_shaker_sort(list_0)
    list_7 = module_0.gnome_sort(list_6)
    list_8 = module_0.bucket_sort(list_1)
    list_9 = [var_0, var_0, var_0, var_0]
    list_10 = module_0.bubble_sort(list_2)
    var_1 = module_0.shell_sort(list_3)
    list_11 = module_0.binary_insertion_sort(list_2)
    list_12 = module_0.bucket_sort(list_5)
    list_13 = module_0.gnome_sort(list_9)
    tuple_0 = (var_0, list_3, var_1)
    with pytest.raises(TypeError):
        module_0.bead_sort(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    list_0 = []
    var_0 = module_0.double_sort(list_0)
    list_1 = module_0.bead_sort(list_0)
    none_type_0 = None
    module_0.double_sort(none_type_0)


def test_case_2():
    tuple_0 = ()
    list_0 = [tuple_0]
    list_1 = module_0.bubble_sort(list_0)
    bool_0 = True
    list_2 = [bool_0, bool_0]
    list_3 = module_0.bead_sort(list_2)


def test_case_3():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0]
    list_1 = module_0.binary_insertion_sort(list_0)


def test_case_4():
    list_0 = []
    var_0 = module_0.shell_sort(list_0)
    list_1 = module_0.bead_sort(list_0)
    list_2 = module_0.cocktail_shaker_sort(list_1)
    list_3 = module_0.exchange_sort(list_1)
    list_4 = module_0.exchange_sort(list_0)
    list_5 = module_0.bubble_sort(list_1)
    list_6 = module_0.comb_sort(list_0)
    list_7 = module_0.gnome_sort(list_6)
    list_8 = module_0.bucket_sort(list_1)
    list_9 = [var_0, var_0, var_0, var_0]
    list_10 = module_0.bucket_sort(list_5)
    list_11 = module_0.bubble_sort(list_9)
    var_1 = module_0.shell_sort(var_0)
    list_12 = module_0.bucket_sort(var_1)
    list_13 = module_0.gnome_sort(list_9)
    list_14 = module_0.bubble_sort(list_9)
    list_15 = module_0.cocktail_shaker_sort(var_0)
    var_2 = module_0.selection_sort(var_1)


@pytest.mark.xfail(strict=True)
def test_case_5():
    list_0 = []
    list_1 = module_0.bucket_sort(list_0)
    list_2 = module_0.binary_insertion_sort(list_0)
    complex_0 = 2838.604 - 3120.56j
    list_3 = [list_2, complex_0, list_2]
    module_0.selection_sort(list_3)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = module_0.cocktail_shaker_sort(dict_0)
    list_1 = [list_0]
    tuple_0 = (list_1, list_0, dict_0)
    list_2 = [tuple_0, dict_0]
    list_3 = module_0.bucket_sort(list_2, bool_0)
    list_4 = []
    list_5 = module_0.binary_insertion_sort(list_4)
    none_type_0 = None
    module_0.shell_sort(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    complex_0 = 2024.13147 - 1758.9747j
    list_0 = [complex_0]
    module_0.bucket_sort(list_0)


def test_case_8():
    list_0 = []
    list_1 = module_0.cocktail_shaker_sort(list_0)


def test_case_9():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = module_0.cocktail_shaker_sort(dict_0)
    var_0 = module_0.double_sort(dict_0)
    list_1 = [var_0, dict_0]
    list_2 = module_0.bucket_sort(list_1, bool_0)
    list_3 = module_0.bubble_sort(dict_0)
    list_4 = []
    list_5 = module_0.binary_insertion_sort(list_4)
    list_6 = module_0.cocktail_shaker_sort(list_5)
    var_1 = module_0.double_sort(list_4)


@pytest.mark.xfail(strict=True)
def test_case_10():
    str_0 = 'F,c!c_]qH"#\r'
    module_0.exchange_sort(str_0)


def test_case_11():
    int_0 = 1810
    list_0 = [int_0]
    list_1 = module_0.exchange_sort(list_0)
    list_2 = module_0.binary_insertion_sort(list_1)
    list_3 = module_0.binary_insertion_sort(list_1)


def test_case_12():
    float_0 = -2011.0
    list_0 = [float_0]
    list_1 = module_0.gnome_sort(list_0)


def test_case_13():
    float_0 = -2011.2888667838301
    list_0 = [float_0, float_0]
    list_1 = module_0.gnome_sort(list_0)


@pytest.mark.xfail(strict=True)
def test_case_14():
    bytes_0 = b"\xc8\x19\x94g]5-H&\xa3\xbb\xc7"
    module_0.shell_sort(bytes_0)


def test_case_15():
    list_0 = []
    var_0 = module_0.shell_sort(list_0)
    list_1 = module_0.bead_sort(list_0)
    bool_0 = False
    var_1 = module_0.double_sort(list_1)
    with pytest.raises(TypeError):
        module_0.bead_sort(bool_0)


def test_case_16():
    bool_0 = False
    list_0 = [bool_0]
    var_0 = module_0.selection_sort(list_0)
    list_1 = []
    list_2 = module_0.comb_sort(list_1)
    list_3 = module_0.cocktail_shaker_sort(list_1)


def test_case_17():
    list_0 = []
    list_1 = module_0.comb_sort(list_0)


@pytest.mark.xfail(strict=True)
def test_case_18():
    none_type_0 = None
    module_0.selection_sort(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_19():
    dict_0 = {}
    none_type_0 = None
    list_0 = [none_type_0, dict_0, none_type_0, dict_0]
    module_0.bubble_sort(list_0)


@pytest.mark.xfail(strict=True)
def test_case_20():
    bool_0 = False
    dict_0 = {bool_0: bool_0, bool_0: bool_0}
    list_0 = module_0.cocktail_shaker_sort(dict_0)
    list_1 = [list_0]
    module_0.bucket_sort(list_1)


def test_case_21():
    int_0 = 2595
    list_0 = [int_0, int_0]
    list_1 = module_0.exchange_sort(list_0)
    list_2 = []
    list_3 = module_0.gnome_sort(list_0)
    var_0 = module_0.double_sort(list_2)
    var_1 = module_0.shell_sort(list_1)
    list_4 = module_0.cocktail_shaker_sort(var_1)
    list_5 = module_0.comb_sort(list_2)
    list_6 = module_0.gnome_sort(list_5)
    list_7 = module_0.bucket_sort(list_5)
    list_8 = module_0.cocktail_shaker_sort(list_6)
    var_2 = module_0.shell_sort(list_1)
    list_9 = module_0.binary_insertion_sort(var_2)
    list_10 = module_0.bubble_sort(list_3)
    var_3 = module_0.shell_sort(list_6)
    var_4 = module_0.double_sort(var_1)
    var_5 = module_0.selection_sort(var_1)


@pytest.mark.xfail(strict=True)
def test_case_22():
    bytes_0 = b"7;"
    none_type_0 = None
    var_0 = module_0.selection_sort(bytes_0)
    assert var_0 == b"7;"
    module_0.double_sort(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_23():
    bytes_0 = b"\x0cJJ\x87\xa3\xef\x13\x831\xc4\xa0"
    module_0.selection_sort(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_24():
    str_0 = "\\,b5lDGc4-a"
    module_0.comb_sort(str_0)


@pytest.mark.xfail(strict=True)
def test_case_25():
    complex_0 = 2024.13147 - 1758.9747j
    list_0 = [complex_0]
    module_0.comb_sort(list_0)


@pytest.mark.xfail(strict=True)
def test_case_26():
    str_0 = "R'\t (:s!syT!"
    module_0.double_sort(str_0)


@pytest.mark.xfail(strict=True)
def test_case_27():
    str_0 = "5P6+*oK)A9N"
    module_0.exchange_sort(str_0)


def test_case_28():
    bool_0 = False
    int_0 = 1579
    bool_1 = True
    list_0 = [int_0, bool_1, bool_0, bool_1]
    list_1 = module_0.gnome_sort(list_0)
    list_2 = [int_0, int_0]
    list_3 = module_0.comb_sort(list_2)
    list_4 = [bool_0, int_0, bool_1]
    list_5 = module_0.exchange_sort(list_4)
    var_0 = module_0.selection_sort(list_5)
    bool_2 = False
    list_6 = [bool_2]
    list_7 = module_0.cocktail_shaker_sort(list_6)
    list_8 = module_0.cocktail_shaker_sort(list_6)
    list_9 = []
    list_10 = module_0.comb_sort(list_9)


@pytest.mark.xfail(strict=True)
def test_case_29():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    list_1 = module_0.cocktail_shaker_sort(list_0)
    float_0 = -2655.6
    module_0.double_sort(float_0)


@pytest.mark.xfail(strict=True)
def test_case_30():
    int_0 = -1882
    list_0 = [int_0]
    list_1 = module_0.binary_insertion_sort(list_0)
    list_2 = []
    var_0 = module_0.shell_sort(list_2)
    list_3 = module_0.comb_sort(list_2)
    list_4 = module_0.bead_sort(list_2)
    list_5 = module_0.exchange_sort(list_4)
    list_6 = [list_4, list_3, list_1, list_3, list_4]
    list_7 = module_0.comb_sort(list_6)
    list_8 = module_0.exchange_sort(list_2)
    list_9 = module_0.exchange_sort(list_0)
    list_10 = module_0.comb_sort(list_2)
    list_11 = module_0.gnome_sort(list_10)
    list_12 = module_0.bucket_sort(list_4)
    var_1 = module_0.double_sort(list_2)
    list_13 = [var_0, list_1, var_0, var_0]
    list_14 = module_0.gnome_sort(list_13)
    list_15 = module_0.cocktail_shaker_sort(list_13)
    list_16 = module_0.bubble_sort(list_9)
    module_0.bucket_sort(list_15, list_15)


def test_case_31():
    list_0 = []
    var_0 = module_0.shell_sort(list_0)
    list_1 = module_0.bead_sort(list_0)
    list_2 = module_0.comb_sort(list_0)
    list_3 = module_0.exchange_sort(list_1)
    list_4 = module_0.exchange_sort(list_0)
    list_5 = module_0.comb_sort(var_0)
    list_6 = module_0.comb_sort(list_0)
    list_7 = module_0.gnome_sort(list_6)
    list_8 = module_0.bucket_sort(list_1)
    list_9 = module_0.gnome_sort(var_0)
    list_10 = [var_0, var_0, var_0, var_0]
    var_1 = module_0.selection_sort(list_0)
    list_11 = module_0.binary_insertion_sort(list_8)
    list_12 = module_0.bucket_sort(list_6)
    list_13 = module_0.bubble_sort(list_5)
    list_14 = [var_1, list_6, list_10, var_1]
    var_2 = module_0.shell_sort(list_14)
    list_15 = module_0.bucket_sort(list_0)
    list_16 = module_0.gnome_sort(list_3)
    list_17 = module_0.bead_sort(list_7)
    list_18 = module_0.bubble_sort(list_14)
    list_19 = module_0.bubble_sort(list_7)
    list_20 = module_0.cocktail_shaker_sort(list_4)
    list_21 = module_0.cocktail_shaker_sort(list_9)


@pytest.mark.xfail(strict=True)
def test_case_32():
    str_0 = "(r&>x"
    module_0.shell_sort(str_0)


def test_case_33():
    list_0 = []
    var_0 = module_0.shell_sort(list_0)
    list_1 = module_0.comb_sort(list_0)
    list_2 = module_0.exchange_sort(var_0)
    list_3 = module_0.exchange_sort(list_0)
    list_4 = module_0.comb_sort(var_0)
    list_5 = module_0.comb_sort(list_0)
    list_6 = module_0.gnome_sort(list_5)
    list_7 = module_0.bucket_sort(list_2)
    list_8 = module_0.gnome_sort(var_0)
    list_9 = [var_0, var_0, var_0, var_0]
    list_10 = module_0.cocktail_shaker_sort(list_4)
    list_11 = module_0.binary_insertion_sort(list_7)
    list_12 = module_0.bucket_sort(list_5)
    list_13 = module_0.bubble_sort(list_4)
    list_14 = [list_10, list_5, list_9, list_10]
    list_15 = module_0.bucket_sort(list_0)
    list_16 = module_0.gnome_sort(list_2)
    list_17 = module_0.bead_sort(list_6)
    list_18 = module_0.bubble_sort(list_14)
    list_19 = module_0.bubble_sort(list_6)
    list_20 = module_0.cocktail_shaker_sort(list_3)
    list_21 = module_0.cocktail_shaker_sort(list_8)


def test_case_34():
    int_0 = 2595
    list_0 = [int_0, int_0]
    list_1 = module_0.exchange_sort(list_0)
    list_2 = []
    list_3 = module_0.gnome_sort(list_0)
    var_0 = module_0.double_sort(list_2)
    var_1 = module_0.shell_sort(list_1)
    list_4 = module_0.cocktail_shaker_sort(var_1)
    list_5 = module_0.comb_sort(list_2)
    list_6 = module_0.gnome_sort(list_5)
    list_7 = module_0.bucket_sort(list_5)
    var_2 = module_0.double_sort(list_2)
    list_8 = [var_0, var_0, var_0, var_0]
    list_9 = module_0.cocktail_shaker_sort(list_8)
    var_3 = module_0.shell_sort(list_1)
    list_10 = module_0.binary_insertion_sort(var_3)
    list_11 = module_0.bubble_sort(list_8)
    var_4 = module_0.shell_sort(list_6)
    list_12 = module_0.bucket_sort(var_2, list_8)
    list_13 = module_0.bead_sort(list_4)
    var_5 = module_0.double_sort(var_3)
    list_14 = module_0.cocktail_shaker_sort(var_3)
    list_15 = [var_1, var_2, var_3]
    list_16 = module_0.cocktail_shaker_sort(list_15)
    list_17 = module_0.bubble_sort(list_13)


def test_case_35():
    tuple_0 = ()
    list_0 = [tuple_0, tuple_0, tuple_0]
    list_1 = module_0.binary_insertion_sort(list_0)


def test_case_36():
    list_0 = []
    var_0 = module_0.shell_sort(list_0)
    list_1 = module_0.bead_sort(list_0)
    list_2 = module_0.comb_sort(list_0)
    list_3 = module_0.exchange_sort(list_1)
    list_4 = module_0.exchange_sort(list_0)
    list_5 = module_0.comb_sort(var_0)
    list_6 = module_0.comb_sort(list_0)
    list_7 = module_0.gnome_sort(list_6)
    list_8 = module_0.bucket_sort(list_1)
    var_1 = module_0.selection_sort(list_0)
    var_2 = module_0.double_sort(list_6)
    list_9 = [var_0, var_0, var_0, var_0]
    var_3 = module_0.selection_sort(list_0)
    var_4 = module_0.double_sort(list_5)
    list_10 = module_0.binary_insertion_sort(list_8)
    list_11 = module_0.cocktail_shaker_sort(list_10)
    list_12 = module_0.bead_sort(list_5)
    list_13 = module_0.gnome_sort(list_5)
    list_14 = module_0.bubble_sort(list_5)
    list_15 = [var_3, list_6, list_9, var_3]
    var_5 = module_0.shell_sort(list_15)
    var_6 = module_0.shell_sort(list_8)
    list_16 = module_0.gnome_sort(var_6)
    list_17 = module_0.bead_sort(list_11)
    list_18 = module_0.bubble_sort(list_8)
    list_19 = module_0.bubble_sort(list_4)
    list_20 = [list_9, list_13, list_0, list_13]
    list_21 = module_0.cocktail_shaker_sort(list_20)
    list_22 = module_0.bubble_sort(var_0)


def test_case_37():
    list_0 = []
    var_0 = module_0.shell_sort(list_0)
    list_1 = module_0.bead_sort(list_0)
    list_2 = module_0.comb_sort(list_0)
    list_3 = module_0.exchange_sort(list_1)
    list_4 = module_0.exchange_sort(list_0)
    list_5 = module_0.comb_sort(var_0)
    list_6 = module_0.comb_sort(list_0)
    list_7 = module_0.binary_insertion_sort(list_1)
    list_8 = module_0.bucket_sort(list_1)
    var_1 = module_0.selection_sort(list_0)
    var_2 = module_0.double_sort(list_6)
    list_9 = [var_0, var_0, var_0, var_0]
    var_3 = module_0.selection_sort(list_0)
    var_4 = module_0.double_sort(list_5)
    list_10 = module_0.binary_insertion_sort(list_8)
    list_11 = module_0.cocktail_shaker_sort(list_10)
    list_12 = module_0.bead_sort(list_5)
    list_13 = module_0.gnome_sort(list_5)
    list_14 = module_0.exchange_sort(var_4)
    list_15 = [list_9, list_5, list_0, list_2, list_9, var_3]
    var_5 = module_0.shell_sort(list_15)
    var_6 = module_0.shell_sort(list_8)
    list_16 = module_0.gnome_sort(var_6)
    list_17 = module_0.bead_sort(list_11)
    list_18 = module_0.bubble_sort(list_8)
    list_19 = module_0.bubble_sort(list_4)
    list_20 = module_0.cocktail_shaker_sort(list_9)
    list_21 = module_0.bubble_sort(var_5)


@pytest.mark.xfail(strict=True)
def test_case_38():
    int_0 = 2595
    list_0 = [int_0, int_0]
    list_1 = module_0.exchange_sort(list_0)
    list_2 = []
    list_3 = module_0.gnome_sort(list_0)
    var_0 = module_0.double_sort(list_2)
    var_1 = module_0.shell_sort(list_1)
    var_2 = module_0.shell_sort(list_0)
    list_4 = module_0.comb_sort(list_2)
    list_5 = module_0.gnome_sort(list_4)
    list_6 = module_0.bucket_sort(list_4)
    var_3 = module_0.double_sort(list_2)
    list_7 = [var_0, var_0, var_0, var_0]
    list_8 = module_0.cocktail_shaker_sort(list_1)
    list_9 = []
    var_4 = module_0.shell_sort(list_9)
    list_10 = module_0.gnome_sort(list_7)
    list_11 = [list_10, var_0, list_1, list_2]
    module_0.binary_insertion_sort(list_11)


def test_case_39():
    int_0 = 2595
    list_0 = [int_0, int_0]
    list_1 = module_0.exchange_sort(list_0)
    list_2 = []
    list_3 = module_0.gnome_sort(list_0)
    var_0 = module_0.double_sort(list_2)
    var_1 = module_0.shell_sort(list_1)
    list_4 = module_0.cocktail_shaker_sort(var_1)
    list_5 = module_0.comb_sort(list_2)
    list_6 = module_0.gnome_sort(list_5)
    list_7 = module_0.bucket_sort(list_5)
    var_2 = module_0.double_sort(list_2)
    list_8 = [var_0, var_0, var_0, var_0]
    list_9 = module_0.cocktail_shaker_sort(list_8)
    var_3 = module_0.shell_sort(list_1)
    list_10 = module_0.binary_insertion_sort(var_3)
    list_11 = module_0.bubble_sort(list_8)
    var_4 = module_0.shell_sort(list_6)
    list_12 = module_0.bucket_sort(var_2, list_8)
    list_13 = module_0.bead_sort(list_4)
    var_5 = module_0.double_sort(var_3)
    bytes_0 = b"\xeb\xe6\xb8\x90}"
    int_1 = 749
    list_14 = module_0.bucket_sort(bytes_0, int_1)
    list_15 = module_0.cocktail_shaker_sort(var_3)
    var_6 = module_0.selection_sort(list_3)


def test_case_40():
    bytes_0 = b"d\x90\x83,\x9a\xf6$@\ncP\xdf\xd2\xee\xa4"
    with pytest.raises(TypeError):
        module_0.bead_sort(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_41():
    str_0 = "\tq:"
    module_0.double_sort(str_0)
