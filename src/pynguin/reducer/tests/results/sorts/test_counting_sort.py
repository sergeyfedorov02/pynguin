# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import counting_sort as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '#@"Q^!R{U!la+3\rsB'
    list_0 = []
    var_0 = module_0.counting_sort(list_0)
    var_1 = module_0.counting_sort_string(str_0)
    assert var_1 == '\r!!"#+3@BQRU^als{'
    none_type_0 = None
    var_2 = module_0.counting_sort_string(var_1)
    assert var_2 == '\r!!"#+3@BQRU^als{'
    module_0.counting_sort_string(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    object_0 = module_1.object()
    tuple_0 = (object_0, object_0)
    module_0.counting_sort(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    bytes_0 = b"L0&\x84\xc3=\xe6\x0e\xce\xdb\xcd\xcf\x99g\xa9Q\xae#\xb8\x06"
    module_0.counting_sort_string(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.counting_sort_string(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 504
    set_0 = {int_0, int_0}
    module_0.counting_sort(set_0)
