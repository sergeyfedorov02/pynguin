# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import a_recursive_sorts as module_0

@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1809
    list_0 = [int_0, int_0, int_0]
    list_1 = module_0.quick_sort(list_0)
    module_0.rec_insertion_sort(list_1, int_0)

@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "p)RN)/_!{7Uq~C?gd'2~"
    module_0.merge(str_0)

@pytest.mark.xfail(strict=True)
def test_case_7():
    bool_0 = True
    none_type_0 = None
    bool_1 = True
    var_0 = module_0.stooge(none_type_0, bool_0, bool_1)
    module_0.quick_sort(bool_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    dict_0 = {}
    list_0 = [dict_0, dict_0, dict_0]
    module_0.stooge_sort(list_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    str_0 = '~o2_MJ}hw5!{U*'

@pytest.mark.xfail(strict=True)
def test_case_13():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    str_0 = '~o2_MJ}hw5!{U*'
    list_1 = module_0.quick_sort(str_0)
    list_2 = module_0.bubble_sort(list_1)
    list_4 = []
    var_1 = module_0.insert_next(list_2, bool_0)
    var_2 = module_0.stooge_sort(list_2)
    list_5 = [var_2, list_4, list_0]
    module_0.bubble_sort(list_5)

def test_case_15():
    int_0 = 314
    int_1 = 1657
    list_0 = [int_0, int_0, int_1, int_1]
    list_1 = module_0.merge(list_0)

@pytest.mark.xfail(strict=True)
def test_case_16():
    str_0 = 'M.y {y'
    module_0.merge(str_0)