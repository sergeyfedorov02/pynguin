# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import minimum_tickets_cost as module_0
import builtins as module_1

def test_case_4():
    object_0 = module_1.object()
    bool_0 = False
    bool_1 = False
    bool_2 = False
    tuple_0 = (bool_1, bool_2)
    tuple_1 = (object_0, bool_0, tuple_0, tuple_0)
    list_0 = [tuple_1]
    float_0 = 580.020079
    with pytest.raises(ValueError):
        module_0.mincost_tickets(list_0, float_0)

def test_case_5():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0]
    with pytest.raises(ValueError):
        module_0.mincost_tickets(list_0, list_0)

def test_case_6():
    bool_0 = True
    dict_0 = {bool_0: bool_0}
    tuple_0 = (dict_0, dict_0, dict_0)
    bool_1 = False
    list_0 = [bool_0, bool_1, bool_0, bool_1]
    with pytest.raises(ValueError):
        module_0.mincost_tickets(list_0, tuple_0)

def test_case_7():
    int_0 = 35
    int_1 = 5719
    list_0 = [int_0, int_1, int_0]
    with pytest.raises(ValueError):
        module_0.mincost_tickets(list_0, list_0)

def test_case_8():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0]
    int_0 = module_0.mincost_tickets(list_0, list_0)
    assert int_0 == 1
    list_1 = []
    int_1 = module_0.mincost_tickets(list_1, list_0)
    assert int_1 == 0