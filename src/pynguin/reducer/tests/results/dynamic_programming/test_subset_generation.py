# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import subset_generation as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = -3967
    none_type_0 = None
    var_0 = module_0.combination_util(
        int_0, none_type_0, int_0, int_0, none_type_0, int_0
    )
    module_0.print_combination(var_0, var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    float_0 = 4244.897
    none_type_0 = None
    module_0.combination_util(
        none_type_0, none_type_0, float_0, none_type_0, none_type_0, none_type_0
    )


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.print_combination(none_type_0, none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -2688
    bool_0 = True
    str_0 = "7Z[{\n.c%b[@"
    tuple_0 = (int_0, bool_0, str_0, bool_0)
    module_0.combination_util(int_0, tuple_0, bool_0, bool_0, bool_0, tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 880
    none_type_0 = None
    var_0 = module_0.combination_util(int_0, int_0, int_0, none_type_0, int_0, int_0)
    module_0.print_combination(int_0, none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 1072
    module_0.print_combination(int_0, int_0, int_0)
