# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import knapsack as module_0

@pytest.mark.xfail(strict=True)
def test_case_0():
    int_0 = 1475
    module_0.knapsack(int_0, int_0, int_0, int_0)

def test_case_2():
    list_0 = []
    with pytest.raises(TypeError):
        module_0.knapsack_with_example_solution(list_0, list_0, list_0)

def test_case_5():
    bool_0 = False
    list_0 = [bool_0]
    with pytest.raises(ValueError):
        module_0.knapsack_with_example_solution(bool_0, list_0, bool_0)

def test_case_6():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    var_0 = module_0.knapsack_with_example_solution(bool_0, list_0, list_0)
    with pytest.raises(ValueError):
        module_0.knapsack_with_example_solution(bool_0, list_0, var_0)

def test_case_8():
    bool_0 = True
    list_0 = [bool_0]
    var_0 = module_0.knapsack_with_example_solution(bool_0, list_0, list_0)
    with pytest.raises(TypeError):
        module_0.knapsack_with_example_solution(bool_0, var_0, var_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    int_0 = 1312
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.knapsack_with_example_solution(int_0, list_0, list_0)
    module_0.knapsack(none_type_0, none_type_0, none_type_0, none_type_0)