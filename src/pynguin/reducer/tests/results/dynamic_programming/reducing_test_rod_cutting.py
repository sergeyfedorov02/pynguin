# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import rod_cutting as module_0

@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    var_1 = module_0.naive_cut_rod_recursive(bool_0, list_0)
    assert var_1 == 1

@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b''
    int_0 = -739
    module_0.naive_cut_rod_recursive(int_0, bytes_0)

@pytest.mark.xfail(strict=True)
def test_case_4():
    int_0 = 1004
    list_0 = [int_0]
    module_0.top_down_cut_rod(int_0, list_0)

def test_case_5():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0]
    bool_1 = True
    var_1 = module_0.bottom_up_cut_rod(bool_1, list_0)
    assert var_1 == 0

@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 4
    list_0 = [int_0, int_0, int_0, int_0]
    var_0 = module_0.top_down_cut_rod(int_0, list_0)
    assert var_0 == 16
    none_type_0 = None
    module_0.bottom_up_cut_rod(none_type_0, int_0)