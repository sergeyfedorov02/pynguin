# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import provider as module_0
import uuid as module_1
import enum as module_2

@pytest.mark.xfail(strict=True)
def test_case_6():
    var_0 = module_1.uuid1()
    j_s_o_n_provider_0 = module_0.JSONProvider(var_0)
    assert f'{type(j_s_o_n_provider_0).__module__}.{type(j_s_o_n_provider_0).__qualname__}' == 'provider.JSONProvider'
    list_0 = [var_0]
    j_s_o_n_provider_0.response(*list_0)

@pytest.mark.xfail(strict=True)
def test_case_8():
    var_0 = module_1.uuid1()
    list_0 = []
    default_j_s_o_n_provider_0 = module_0.DefaultJSONProvider(var_0)
    assert f'{type(default_j_s_o_n_provider_0).__module__}.{type(default_j_s_o_n_provider_0).__qualname__}' == 'provider.DefaultJSONProvider'
    assert module_0.DefaultJSONProvider.ensure_ascii is True
    assert module_0.DefaultJSONProvider.sort_keys is True
    assert module_0.DefaultJSONProvider.compact is None
    assert module_0.DefaultJSONProvider.mimetype == 'application/json'
    default_j_s_o_n_provider_0.response(*list_0)

@pytest.mark.xfail(strict=True)
def test_case_9():
    enum_dict_0 = module_2._EnumDict()
    default_j_s_o_n_provider_0 = module_0.DefaultJSONProvider(enum_dict_0)
    assert f'{type(default_j_s_o_n_provider_0).__module__}.{type(default_j_s_o_n_provider_0).__qualname__}' == 'provider.DefaultJSONProvider'
    assert module_0.DefaultJSONProvider.ensure_ascii is True
    assert module_0.DefaultJSONProvider.sort_keys is True
    assert module_0.DefaultJSONProvider.compact is None
    assert module_0.DefaultJSONProvider.mimetype == 'application/json'
    default_j_s_o_n_provider_0.dumps(default_j_s_o_n_provider_0, **enum_dict_0)

@pytest.mark.xfail(strict=True)
def test_case_10():
    var_0 = module_1.uuid1()
    default_j_s_o_n_provider_0 = module_0.DefaultJSONProvider(var_0)
    assert f'{type(default_j_s_o_n_provider_0).__module__}.{type(default_j_s_o_n_provider_0).__qualname__}' == 'provider.DefaultJSONProvider'
    assert module_0.DefaultJSONProvider.ensure_ascii is True
    assert module_0.DefaultJSONProvider.sort_keys is True
    assert module_0.DefaultJSONProvider.compact is None
    assert module_0.DefaultJSONProvider.mimetype == 'application/json'
    str_0 = default_j_s_o_n_provider_0.dumps(var_0)
    default_j_s_o_n_provider_0.response(*list_0)

@pytest.mark.xfail(strict=True)
def test_case_12():
    var_0 = module_1.uuid1()
    int_0 = 1
    default_j_s_o_n_provider_0 = module_0.DefaultJSONProvider(var_0)
    assert f'{type(default_j_s_o_n_provider_0).__module__}.{type(default_j_s_o_n_provider_0).__qualname__}' == 'provider.DefaultJSONProvider'
    assert module_0.DefaultJSONProvider.ensure_ascii is True
    assert module_0.DefaultJSONProvider.sort_keys is True
    assert module_0.DefaultJSONProvider.compact is None
    assert module_0.DefaultJSONProvider.mimetype == 'application/json'
    str_0 = 'test'
    str_1 = 'test'
    dict_0 = {str_0: int_0, str_0: default_j_s_o_n_provider_0, str_1: int_0, str_0: str_1}
    default_j_s_o_n_provider_0.response(**dict_0)